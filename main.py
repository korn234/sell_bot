import discord
import random
import requests
import os
from discord.ext import commands, tasks
from discord import app_commands
from discord.ui import Button, View, Select
from dotenv import load_dotenv
import threading
import asyncio
from discord import Interaction
from discord.ui import Button, View
from discord import Embed, ButtonStyle
import asyncio
import random
import aiohttp
from datetime import datetime, timedelta
import pytz

# Add this at the top of your code with other global variables
BLACKLISTED_ROLE_ID = 1372512776429375489

# Create a helper function to check if user is blacklisted
def is_blacklisted(user):
    """Check if user has the blacklisted role"""
    return any(role.id == BLACKLISTED_ROLE_ID for role in user.roles)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .env
load_dotenv()
GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")

def create_gist(content):
    url = "https://api.github.com/gists"
    payload = {
        "description": "Key for DoDEE",
        "public": False,
        "files": {
            "key.txt": {
                "content": content
            }
        }
    }

    headers = {
        "Accept": "application/vnd.github+json",
        "Authorization": f"Bearer {GITHUB_TOKEN}",
        "X-GitHub-Api-Version": "2022-11-28"
    }

    try:
        response = requests.post(url, json=payload, headers=headers)
        if response.status_code == 201:
            return response.json()["html_url"]
        else:
            print(f"‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á Gist ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {response.status_code} - {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Gist: {e}")
        return None

TOKEN = os.getenv("DISCORD_TOKEN")
SEASON_CHANNEL_ID = 1304398097421434930  # ‡∏ä‡πà‡∏≠‡∏á‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô
DAILY_CHANNEL_ID = 1357307785833873589   # ‡∏ä‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
STATUS_CHANNEL_ID = 1339360776095531078
FREEFIRE_CHANNEL_ID = 1371350474036346890

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True
intents.members = True  # ‡πÄ‡∏û‡∏¥‡πà‡∏° intents ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
bot = commands.Bot(command_prefix="!", intents=intents)
# ‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà QR ‡πÅ‡∏•‡∏∞‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 1:1
# Format: (QR URL, Phone number, probability weight)
SEASON_PAYMENT_OPTIONS = [
    ("https://media.discordapp.net/attachments/1234805355188326432/1357251880035811329/IMG_7559.png", "080-781-8346", 60),
    ("https://media.discordapp.net/attachments/1234805355188326432/1357251970879983717/S__18849802.jpg", "095-746-4287", 5),
    ("https://media.discordapp.net/attachments/1234805355188326432/1358795179414392973/IMG_7604.jpg?ex=67f5241f&is=67f3d29f&hm=919cdde082227255e674acea218d36bb904c1e92b93b5cdb0f9e66dbd1112654&=&format=webp&width=456&height=988", "094-338-9674", 35)
]

DAILY_PAYMENT_PAIRS = {
    "https://media.discordapp.net/attachments/1357027765794373642/1357323518127247501/New_Project_404_7B9F1CE.png?ex=67efc988&is=67ee7808&hm=c53f3c099338c8d36487fbbd075e3fdb674a3323b33c04e523be36e67fa9cce9&=&format=webp&quality=lossless&width=791&height=989": "097-206-0458"
}

FREEFIRE_PAYMENT_OPTIONS = [
    ("https://media.discordapp.net/attachments/1234805355188326432/1357251880035811329/IMG_7559.png", "080-781-8346", 60),
    ("https://media.discordapp.net/attachments/1234805355188326432/1358795179414392973/IMG_7604.jpg", "094-338-9674", 40)
]

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á FreefireView class
class FreefireView(View):
    def __init__(self):
        super().__init__()
        self.add_item(FreeFireDropdown())
        self.add_item(AdminContactButton())

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á view
    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if is_blacklisted(interaction.user):
            await interaction.response.send_message(
                "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô",
                ephemeral=True
            )
            return False
        return True

# ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç FreeFireDropdown class
class FreeFireDropdown(Select):
    def __init__(self):
        options = [
            discord.SelectOption(label="30 ‡∏ß‡∏±‡∏ô", description="‡∏£‡∏≤‡∏Ñ‡∏≤ 300 ‡∏ö‡∏≤‡∏ó", emoji="üíé"),
            discord.SelectOption(label="‡∏ñ‡∏≤‡∏ß‡∏£", description="‡∏£‡∏≤‡∏Ñ‡∏≤ 500 ‡∏ö‡∏≤‡∏ó", emoji="üåü"),
        ]
        super().__init__(placeholder="üíµ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£...", options=options)

    async def callback(self, interaction: discord.Interaction):
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö blacklist ‡∏Å‡πà‡∏≠‡∏ô
        if is_blacklisted(interaction.user):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", ephemeral=True)
            return

    async def callback(self, interaction: discord.Interaction):
        # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡πà‡∏≠‡∏ô
        warning_embed = discord.Embed(
            title="‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á",
            description=(
                "# üìå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ:\n"
                "> üíª ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå (PC/Laptop)\n"
                "> üì± GBox (‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå)\n\n"
                "```diff\n- ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡πà‡∏≤‡∏ô: ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á\n```\n"
                "‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?"
            ),
            color=discord.Color.yellow()
        )

        # ‡∏™‡∏£‡πâ‡∏≤‡∏á View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
        class RequirementConfirmView(discord.ui.View):
            def __init__(self, original_selection):
                super().__init__()
                self.original_selection = original_selection

            async def interaction_check(self, interaction: discord.Interaction) -> bool:
                if is_blacklisted(interaction.user):
                    await interaction.response.send_message(
                        "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô",
                        ephemeral=True
                    )
                    return False
                return True

            @discord.ui.button(label="‚úÖ ‡∏°‡∏µ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á", style=discord.ButtonStyle.green)
            async def confirm(self, button_interaction: discord.Interaction, button: discord.ui.Button):
                # ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
                if self.original_selection == "30 ‡∏ß‡∏±‡∏ô":
                    price = 300
                    duration = "30 ‡∏ß‡∏±‡∏ô"
                else:
                    price = 500
                    duration = "‡∏ñ‡∏≤‡∏ß‡∏£"

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                overwrites = {
                    button_interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
                    button_interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
                    button_interaction.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
                }

                admin_role = discord.utils.get(button_interaction.guild.roles, name="Admin")
                if admin_role:
                    overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

                channel = await button_interaction.guild.create_text_channel(
                    f"freefire-{button_interaction.user.name}",
                    overwrites=overwrites
                )

                # ‡∏™‡∏∏‡πà‡∏° QR code
                total_weight = sum(weight for _, _, weight in FREEFIRE_PAYMENT_OPTIONS)
                r = random.uniform(0, total_weight)
                for qr, phone, weight in FREEFIRE_PAYMENT_OPTIONS:
                    r -= weight
                    if r <= 0:
                        qr_url = qr
                        wallet_phone = phone
                        break

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                payment_embed = discord.Embed(
                    title="```üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô Free Fire Premium```",
                    description=(
                        "# üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠\n"
                        f"> üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠: {button_interaction.user.mention}\n"
                        f"> üéÆ ‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à: {duration}\n"
                        f"> üí∞ ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞: {price} ‡∏ö‡∏≤‡∏ó\n"
                        f"> üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ß‡∏≠‡πÄ‡∏•‡∏ó: {wallet_phone}\n\n"
                        "# ‚ö†Ô∏è ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n"
                        "> 1Ô∏è‚É£ ‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á\n"
                        "> 2Ô∏è‚É£ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô\n"
                        "> 3Ô∏è‚É£ ‡πÅ‡∏Ñ‡∏õ‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô\n"
                        "> 4Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô\n\n"
                        "```ini\n[‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ]```"
                    ),
                    color=0xFF6B6B
                )
                payment_embed.set_image(url=qr_url)
                payment_embed.set_thumbnail(url="https://media.discordapp.net/attachments/1301468241335681024/1368181218180333568/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg")
                payment_embed.set_footer(text="‚ú® Premium Payment System", icon_url=button_interaction.user.avatar.url)

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
                class FreefirePaymentView(discord.ui.View):
                    def __init__(self):
                        super().__init__(timeout=None)

                    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.green)
                    async def confirm_payment(self, payment_interaction: discord.Interaction, button: discord.ui.Button):
                        await payment_interaction.response.send_message("üì∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô")

                        def check(m):
                            return m.author == payment_interaction.user and m.channel == channel and len(m.attachments) > 0

                        try:
                            msg = await bot.wait_for('message', check=check, timeout=300.0)

                            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏á DM
                            try:
                                dm_channel = await payment_interaction.user.create_dm()
                                game_info = discord.Embed(
                                    title="üéÆ Free Fire Premium Hack",
                                    description=(
                                        "# üì± ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á\n\n"
                                        "# üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î\n"
                                        "**‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°:**\n"
                                        "https://www.mediafire.com/file/s7urw8b5ginw0m9/DoDEE+x+FF+iPA_1.109.1_1746997543.ipa/file"
                                    ),
                                    color=discord.Color.green()
                                )
                                await dm_channel.send(embed=game_info)
                                await dm_channel.send("üé• **‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á:**\nhttps://youtu.be/wPie4ezB3U0?si=QmMuxu-L_sTqgKKr")

                                await channel.send("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß!")

                            except:
                                await channel.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö DM")

                        except asyncio.TimeoutError:
                            await channel.send("‚ùå ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà")

                    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
                    async def cancel(self, payment_interaction: discord.Interaction, button: discord.ui.Button):
                        await channel.delete()

                # ‡∏™‡πà‡∏á embed ‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                await channel.send(embed=payment_embed, view=FreefirePaymentView())
                await button_interaction.response.send_message(
                    f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà {channel.mention}",
                    ephemeral=True
                )

            @discord.ui.button(label="‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
            async def cancel(self, button_interaction: discord.Interaction, button: discord.ui.Button):
                await button_interaction.response.send_message(
                    "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
                    ephemeral=True
                )

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°
        await interaction.response.send_message(
            embed=warning_embed,
            view=RequirementConfirmView(self.values[0]),
            ephemeral=True
        )

        class FreefireConfirmView(View):
            def __init__(self):
                super().__init__()

            @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
            async def confirm_payment(self, interaction: discord.Interaction, button: discord.ui.Button):
                # ‡∏™‡∏∏‡πà‡∏° QR code
                qr_url, phone, _ = random.choices(
                    FREEFIRE_PAYMENT_OPTIONS,
                    weights=[opt[2] for opt in FREEFIRE_PAYMENT_OPTIONS],
                    k=1
                )[0]

                # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
                overwrites = {
                    interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
                    interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
                    interaction.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
                }

                channel = await interaction.guild.create_text_channel(
                    f"freefire-{interaction.user.name}",
                    overwrites=overwrites
                )

                payment_embed = discord.Embed(
                    title="üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô Free Fire",
                    description=f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå: {phone}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: {price} ‡∏ö‡∏≤‡∏ó",
                    color=discord.Color.gold()
                )
                payment_embed.set_image(url=qr_url)

                class ConfirmPaymentView(View):
                    def __init__(self, price, duration):
                        super().__init__(timeout=None)  # Set timeout to None for persistence
                        self.price = price
                        self.duration = duration

                    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.green)
                    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
                        await interaction.response.send_message("üì∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô")

                        def check(m):
                            return m.author == interaction.user and m.channel == channel and len(m.attachments) > 0

                        try:
                            msg = await bot.wait_for('message', check=check, timeout=300.0)

                            success_embed = discord.Embed(
                                title="‚úÖ ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                                description="‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠\n‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß",
                                color=discord.Color.green()
                            )
                            await channel.send(embed=success_embed)

                            # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ó‡∏≤‡∏á DM
                            try:
                                dm_channel = await interaction.user.create_dm()
                                game_embed = discord.Embed(
                                    title="üéÆ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏° Free Fire",
                                    description="‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°: https://www.mediafire.com/file/s7urw8b5ginw0m9/DoDEE+x+FF+iPA_1.109.1_1746997543.ipa/file ",
                                    color=discord.Color.blue()
                                )
                                await dm_channel.send(embed=game_embed)
                            except:
                                await channel.send("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö DM")

                        except asyncio.TimeoutError:
                            await channel.send("‚ùå ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà")

                    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
                    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
                        await channel.delete()

                    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏ó", style=discord.ButtonStyle.grey)
                    async def close(self, interaction: discord.Interaction, button: discord.ui.Button):
                        await channel.delete()

                await channel.send(embed=payment_embed, view=ConfirmPaymentView(price, duration))
                await interaction.response.send_message(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà {channel.mention}", ephemeral=True)

            @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
            async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
                await interaction.response.send_message("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

        await interaction.response.send_message(embed=embed, view=FreefireConfirmView(), ephemeral=True)

@tasks.loop(minutes=5)
async def post_freefire_message():
    channel = bot.get_channel(FREEFIRE_CHANNEL_ID)
    if channel:
        await channel.purge()

        # Embed ‡∏´‡∏•‡∏±‡∏Å
        main_embed = discord.Embed(
            title="```üéÆ FREE FIRE PREMIUM HACK üéÆ```",
            description=(
                "# üåü ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏£‡∏µ‡πÄ‡∏°‡∏µ‡∏¢‡∏°\n"
                "> üéØ ‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ß‡∏ï‡∏∂‡∏á‡πÜ\n"
                "> üëÅÔ∏è ESP\n" 
                "> üõ°Ô∏è ‡∏Å‡∏±‡∏ô‡πÅ‡∏ö‡∏ô ‡∏Å‡∏±‡∏ô‡∏î‡∏≥\n\n"
                "# üíé ‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤\n"
                "```ini\n"
                "[‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à 30 ‡∏ß‡∏±‡∏ô]\n"
                "üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏¥‡πÄ‡∏®‡∏© 300 ‡∏ö‡∏≤‡∏ó\n"
                "‚ú® ‡∏ü‡∏£‡∏µ! ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n\n"
                "[‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏ñ‡∏≤‡∏ß‡∏£]\n" 
                "üíé ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á 500 ‡∏ö‡∏≤‡∏ó\n"
                "üåü ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏ï‡∏•‡∏≠‡∏î‡∏ä‡∏µ‡∏û\n"
                "```\n\n"
                "# ‚≠ê ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå\n"
                "> ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ü‡∏£‡∏µ‡∏ï‡∏•‡∏≠‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n"
                "> ‚úÖ ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 100%\n"
                "> ‚úÖ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï 24 ‡∏ä‡∏°.\n"
                "> ‚úÖ ‡∏°‡∏µ‡∏Ñ‡∏•‡∏¥‡∏õ‡∏™‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\n"
                "> ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏Å‡∏°"
            ),
            color=0xFF6B6B
        )

        # ‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á Embed
        main_embed.set_thumbnail(url="https://media.discordapp.net/attachments/1301468241335681024/1368181218180333568/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg?ex=68227e4d&is=68212ccd&hm=6f6f8399818fdf7ab3a7431a0a399e43444165df19ccea9309556793a4b3939f&=&format=webp&width=989&height=989")
        main_embed.set_image(url="https://media.discordapp.net/attachments/1301468241335681024/1371339382178578553/IMG_0045.png?ex=6822c6d2&is=68217552&hm=570e39a1452c6af722bc8619940ac94f5823aa696f9344f40662295f2a454edd&=&format=webp&quality=lossless&width=1860&height=859")
        main_embed.set_footer(text="‚ú® Updated Today ‚Ä¢ Premium Version", icon_url="https://media.discordapp.net/attachments/1301468241335681024/1368181218180333568/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg?ex=68227e4d&is=68212ccd&hm=6f6f8399818fdf7ab3a7431a0a399e43444165df19ccea9309556793a4b3939f&=&format=webp&width=989&height=989")

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        await channel.send(embed=main_embed)
        await channel.send("```ini\n[‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°]```", view=FreefireView())

import json
import os

# Load keys from files or create empty if not exists
def load_keys():
    if os.path.exists('season_keys.json'):
        with open('season_keys.json', 'r') as f:
            return json.load(f)
    return {
        "1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô": [],
        "3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô": [],
        "‡∏ñ‡∏≤‡∏ß‡∏£": []
    }

def load_daily_keys():
    if os.path.exists('daily_keys.json'):
        with open('daily_keys.json', 'r') as f:
            return json.load(f)
    return {
        "3 ‡∏ß‡∏±‡∏ô": [],
        "15 ‡∏ß‡∏±‡∏ô": [],
        "30 ‡∏ß‡∏±‡∏ô": [],
        "‡∏ñ‡∏≤‡∏ß‡∏£": []
    }

# Save keys to files
def save_keys():
    with open('season_keys.json', 'w') as f:
        json.dump(season_keys, f, indent=4)

def save_daily_keys():
    with open('daily_keys.json', 'w') as f:
        json.dump(daily_keys, f, indent=4)

season_keys = load_keys()
daily_keys = load_daily_keys()

def get_next_key(duration, type=None):
    keys = None

    if type == "daily":
        if duration in daily_keys and daily_keys[duration]:
            keys = daily_keys[duration]
    elif type == "season":
        if duration in season_keys and season_keys[duration]:
            keys = season_keys[duration]
    else:
        # fallback ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏¥‡∏°
        if duration in daily_keys and daily_keys[duration]:
            keys = daily_keys[duration]
        elif duration in season_keys and season_keys[duration]:
            keys = season_keys[duration]

    if keys and len(keys) > 0:
        if len(keys) <= 3:  # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢
            notification_channel = bot.get_channel(1357308234137866370)
            if notification_channel:
                asyncio.create_task(
                    notification_channel.send(
                        f"‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏Ñ‡∏µ‡∏¢‡πå {duration} ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏¢ ({len(keys)} ‡∏Ñ‡∏µ‡∏¢‡πå)"
                    )
                )
        return keys[0]  # ‡∏™‡πà‡∏á‡∏Ñ‡∏µ‡∏¢‡πå‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏ô ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡∏ö

    return None

def remove_used_key(duration, key):
    if duration in daily_keys and key in daily_keys[duration]:
        daily_keys[duration].remove(key)
        save_daily_keys()
        return True
    elif duration in season_keys and key in season_keys[duration]:
        season_keys[duration].remove(key)
        save_keys()
        return True
    return False


class CloseButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="‚ùå ‡∏õ‡∏¥‡∏î‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏ä‡∏ó", style=discord.ButtonStyle.red, custom_id="close_button")

    async def callback(self, interaction: discord.Interaction):
        if isinstance(interaction.channel, discord.TextChannel):
            await interaction.channel.delete()

class PersistentView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(CloseButton())

# Store active views
active_views = {}

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ ‡πÉ‡∏™‡πà‡∏ï‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£ import
daily_sales = 0  # ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
async def update_sales(amount: int):
    global daily_sales
    daily_sales += amount

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
@tasks.loop(hours=24)
async def reset_daily_sales():
    global daily_sales
    daily_sales = 0
    print("‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß")

class ConfirmView(View):
    def __init__(self, price: int, duration: str):
        super().__init__()
        self.price = price
        self.duration = duration
        self.status_message = None

    async def update_status(self, interaction: discord.Interaction, status: str, color: discord.Color):
        embed = discord.Embed(
            title="üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£",
            description=status,
            color=color
        )

        try:
            if self.status_message:
                await self.status_message.edit(embed=embed)
            else:
                self.status_message = await interaction.channel.send(embed=embed)
        except Exception as e:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
            try:
                self.status_message = await interaction.channel.send(embed=embed)
            except Exception as e:
                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏î‡πâ: {e}")

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        if is_blacklisted(interaction.user):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", ephemeral=True)
            return False
        return True
    
    @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô", style=discord.ButtonStyle.green)
    async def confirm(self, interaction: discord.Interaction,
                      button: discord.ui.Button):
        # Create private channel
        overwrites = {
            interaction.guild.default_role:
            discord.PermissionOverwrite(read_messages=False),
            interaction.user:
            discord.PermissionOverwrite(read_messages=True,
                                        send_messages=True),
            interaction.guild.me:
            discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }

        # Add admin role permissions if it exists
        admin_role = discord.utils.get(interaction.guild.roles, name="Admin")
        if admin_role:
            overwrites[admin_role] = discord.PermissionOverwrite(
                read_messages=True, send_messages=True)

        channel_name = f"order-{interaction.user.name}"
        channel = await interaction.guild.create_text_channel(
            channel_name,
            overwrites=overwrites,
            topic=f"Order: {self.duration} - {self.price} ‡∏ö‡∏≤‡∏ó")

        await interaction.response.send_message(
            f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà {channel.mention}",
            ephemeral=True)

        # Send initial message in the new channel
        # ‡∏™‡∏∏‡πà‡∏° QR code ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ß‡∏≠‡πÄ‡∏•‡∏ó‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
        if self.duration in ["3 ‡∏ß‡∏±‡∏ô", "15 ‡∏ß‡∏±‡∏ô", "30 ‡∏ß‡∏±‡∏ô", "‡∏ñ‡∏≤‡∏ß‡∏£"] and self.price in [99, 190, 300, 799]:  # ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
            qr_url = random.choice(list(DAILY_PAYMENT_PAIRS.keys()))
            phone = DAILY_PAYMENT_PAIRS[qr_url]
        else:  # ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô
            total_weight = sum(weight for _, _, weight in SEASON_PAYMENT_OPTIONS)
            r = random.uniform(0, total_weight)
            for qr, ph, weight in SEASON_PAYMENT_OPTIONS:
                r -= weight
                if r <= 0:
                    qr_url = qr
                    phone = ph
                    break

        embed = discord.Embed(
            title="üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            description=f"üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {interaction.user.mention}!\n"
            f"üõí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠: {self.duration}\n"
            f"üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {self.price} ‡∏ö‡∏≤‡∏ó\n"
            f"üì± ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ß‡∏≠‡πÄ‡∏•‡∏ó: {phone}\n\n"
            "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            color=discord.Color.blue())
        embed.set_image(url=qr_url)

        # Create confirmation view
        class ConfirmPaymentView(View):
            def __init__(self, price, duration):
                super().__init__(timeout=None)  # Set timeout to None for persistence
                self.price = price
                self.duration = duration

            @discord.ui.button(label="‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
                               style=discord.ButtonStyle.green)
            async def confirm_payment(self, interaction: discord.Interaction,
                                      button: discord.ui.Button):
                await self.view.update_status(interaction, "‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô...", discord.Color.gold())
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                def check_payment(message):
                    return message.author == interaction.user and message.channel == interaction.channel and len(message.attachments) > 0

                await interaction.response.send_message("üìé ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ", ephemeral=True)

                try:
                    payment_msg = await bot.wait_for('message', check=check_payment, timeout=300)
                    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢
                    await update_sales(self.price)
                    # ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤ ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß
                    await interaction.channel.send("‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
                except TimeoutError:
                    await interaction.channel.send("‚è∞ ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà")
                    return
                try:

                    # Assign roles based on purchase amount
                    if self.price in [150, 300]:
                        role = interaction.guild.get_role(1364253774977175652)
                        if role:
                            await interaction.user.add_roles(role)
                    elif self.price == 400:
                        role1 = interaction.guild.get_role(1364253774977175652)
                        role2 = interaction.guild.get_role(1337637128410103882)
                        if role1 and role2:
                            await interaction.user.add_roles(role1, role2)

                    # Initialize success_msg before using it
                    try:
                        # Send initial success message
                        success_msg = await interaction.channel.send("‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...")

                        # Send product details and video based on price
                        key = get_next_key(self.duration)
                        if not key:
                            await self.view.update_status(interaction, "‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", discord.Color.red())
                            await interaction.followup.send("‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", ephemeral=True)
                            return

                        if self.price in [99, 190, 300, 799]:
                            # ‡πÉ‡∏ä‡πâ daily_keys
                            key = get_next_key(self.duration, type="daily")
                        else:
                            # ‡πÉ‡∏ä‡πâ season_keys
                            key = get_next_key(self.duration, type="season")

                        # ---------- ‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏á‡∏Ñ‡∏µ‡∏¢‡πå‡∏´‡∏•‡∏±‡∏Å ----------
                        if self.price in [99, 190, 300, 799]:
                            # Daily prices
                            if key in daily_keys[self.duration]:
                                daily_keys[self.duration].remove(key)
                                save_daily_keys()
                                print(f"‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {self.duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                            else:
                                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {self.duration} ‡πÑ‡∏î‡πâ")

                            video_url_1 = "https://cdn.discordapp.com/attachments/1301468241335681024/1367358302106816533/IMG_0300.MP4?ex=68144b27&is=6812f9a7&hm=c64bf66043f2605dbcf57dc3956abc566edd6050c7a61d7da7676dbfcc1d6280&"
                            video_url_2 = "https://cdn.discordapp.com/attachments/1357308234137866370/1357763650227535883/videoplayback.mp4?ex=67f16370&is=67f011f0&hm=105a9ded6c87d346fd5daad3d1004b891738dc5537d4101ab8465ab6e710fd56&"

                            product_embed = discord.Embed(
                                title="üéÆ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                                description=f"‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!\n\n"
                                            "**DNS ‡∏Å‡∏±‡∏ô‡∏î‡∏≥ ‚ò£Ô∏è**\n"
                                            "https://wsfteam.xyz/configprofiles\n\n"
                                            "**‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡πÇ‡∏õ‡∏£**\n"
                                            "https://t.me/savageios\n"
                                            "**‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏° üéÆ**\n"
                                            "‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ó‡πÄ‡∏•‡πÅ‡∏Å‡∏£‡∏°‡πÑ‡∏õ‡πÇ‡∏´‡∏•‡∏î\n\n https://t.me/savageios\n\n"
                                            f"**‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ({self.duration})**\n"
                                            f"```\n{key}\n```",
                                color=discord.Color.gold()
                            )

                            if self.duration == "‡∏ñ‡∏≤‡∏ß‡∏£":
                                try:
                                    dm_channel = await interaction.user.create_dm()
                                    await dm_channel.send(
                                        "üéÅ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏≤‡∏ß‡∏£!\n\nüìå ‡∏Å‡∏•‡∏∏‡πà‡∏° Telegram:\nhttps://t.me/+ZunSLIMtyEZjODc1\n\nüõ°Ô∏è **‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏≤‡∏ß‡∏£** ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡∏ä‡∏µ‡∏û/n"
                                    )
                                except Exception as e:
                                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ñ‡∏≤‡∏ß‡∏£‡πÑ‡∏î‡πâ: {e}")

                            dm_channel = await interaction.user.create_dm()
                            await dm_channel.send(f"üé• ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î: {video_url_1}")
                            await dm_channel.send(f"üé• ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏°: {video_url_2}")
                            await dm_channel.send(embed=product_embed)
                            await dm_channel.send("üîë **‡∏Ñ‡∏µ‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:** (‡∏Å‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏ö''')")
                            await dm_channel.send(content=f"```\n{key}\n```", view=HelpButtonView(key))

                        else:
                            # Season prices
                            if key in season_keys[self.duration]:
                                season_keys[self.duration].remove(key)
                                save_keys()
                                print(f"‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {self.duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                            else:
                                print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {self.duration} ‡πÑ‡∏î‡πâ")

                            video_url = "https://cdn.discordapp.com/attachments/1301468241335681024/1368127106927558687/d1a97a74-d9dd-4f78-b55b-84bd19c24d49_transcode-out.mov?ex=68171728&is=6815c5a8&hm=7da2c5defe0b1238b0c7a43ca440e9a7658050215624d7b4a6d7a8efc9a6daa3&"

                            product_embed = discord.Embed(
                                title="üéÆ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
                                description=f"‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠!\n\n"
                                            "**DNS ‡∏Å‡∏±‡∏ô‡∏î‡∏≥ ‚ò£Ô∏è**\n"
                                            "https://khoindvn.io.vn/document/DNS/khoindns.mobileconfig?sign=1\n\n"
                                            "**‡∏Å‡∏î‡∏•‡∏¥‡πâ‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏ß‡πà‡∏≤ . **\n"
                                            "https://discord.com/channels/1201075583300419664/1367747079253786715\n\n"
                                            f"**‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ({self.duration})**\n"
                                            f"```\n{key}\n```",
                                color=discord.Color.gold()
                            )

                            dm_channel = await interaction.user.create_dm()
                            await dm_channel.send(f"üé• ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: {video_url}")
                            await dm_channel.send(embed=product_embed)
                            await dm_channel.send("üîë **‡∏Ñ‡∏µ‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:** (‡∏Å‡∏î‡∏Ñ‡πâ‡∏≤‡∏á‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏•‡∏ö''')")
                            await dm_channel.send(content=f"```\n{key}\n```", view=HelpButtonView(key))
                        # Send success message in channel
                        success_msg = await self.view.update_status(interaction, "‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß!", discord.Color.green())
                        #await interaction.edit_original_response(content="‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß!")

                    except discord.HTTPException as e:
                        await self.view.update_status(interaction, "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: " + str(e), discord.Color.red())
                        await interaction.followup.send(
                            "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: " + str(e),
                            ephemeral=True)
                        return

                    # Send notification to notification channel
                    notification_channel = interaction.guild.get_channel(
                        1357308234137866370)
                    if notification_channel:
                        notification_embed = discord.Embed(
                            title="üõçÔ∏è ‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà!",
                            description=
                            f"üë§ ‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠: {interaction.user.mention}\n"
                            f"üéÆ ‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à: {self.price} ‡∏ö‡∏≤‡∏ó\n"
                            f"üì± ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô: {phone}\n"
                            f"‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤: <t:{int(discord.utils.utcnow().timestamp())}:F>",
                            color=discord.Color.green())
                        await notification_channel.send(embed=notification_embed)
                    await success_msg.edit(content="‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≤‡∏á DM ‡πÅ‡∏•‡πâ‡∏ß!")
                except discord.HTTPException as e:
                    await self.view.update_status(interaction, "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á", discord.Color.red())
                    await interaction.followup.send(
                        "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á",
                        ephemeral=True)
                except Exception as e:
                    await self.view.update_status(interaction, f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", discord.Color.red())
                    await interaction.followup.send(
                        f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}", ephemeral=True)

            @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.red)
            async def cancel_payment(self, interaction: discord.Interaction, button: discord.ui.Button):
                await self.view.update_status(interaction, "üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß", discord.Color.red())
                await interaction.response.send_message("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
                await asyncio.sleep(5)
                if isinstance(interaction.channel, discord.TextChannel):
                    await interaction.channel.delete()

        confirm_view = ConfirmPaymentView(self.price, self.duration)
        confirm_view.view = self # Assign self to the inner view for access to update_status
        confirm_view.add_item(CloseButton())
        await channel.send(embed=embed, view=confirm_view)

        class CopyKeyButton(Button):
            def __init__(self, key):
                super().__init__(label="üîë ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå", style=discord.ButtonStyle.primary)
                self.key = key

            async def callback(self, interaction: discord.Interaction):
                try:
                    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Gist ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏µ‡∏¢‡πå
                    gist_url = create_gist(self.key)

                    if gist_url:
                        await interaction.response.send_message(
                            f"üîë ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡∏µ‡∏¢‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà ‡∏Å‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ raw:\n{gist_url}",
                            ephemeral=True
                        )
                    else:
                        await interaction.response.send_message(
                            "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Ñ‡∏µ‡∏¢‡πå.",
                            ephemeral=True
                        )
                except Exception as e:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏î‡πâ: {e}")
                    await interaction.response.send_message("‚ùå ‡∏°‡∏µ‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î.", ephemeral=True)

        class HelpButton(Button):
            def __init__(self):super().__init__(label="üõ†Ô∏è ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á? ‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà", style=discord.ButtonStyle.danger)

            async def callback(self, interaction: discord.Interaction):
                try:
                    await interaction.response.defer(ephemeral=True)
                    dm_channel = await interaction.user.create_dm()

                    await dm_channel.send("üåê ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠:\nhttps://khoindvn.io.vn/")
                    await dm_channel.send("üé• ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î:\nhttps://youtube.com/shorts/N_N1EGrzd7g?si=sSx3aWixDjGv674D")
                    await dm_channel.send("üé• ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡πÉ‡∏™‡πà cert + hack:\nhttps://youtube.com/shorts/G-8cYsEQnPg?si=L-MHd19qccRH5koO")
                except Exception as e:
                    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏î‡πâ: {e}")

        class HelpButtonView(View):
            def __init__(self, key):
                super().__init__(timeout=None)
                self.add_item(CopyKeyButton(key))
                self.add_item(HelpButton())

        # Send payment instruction message
        payment_instruction = discord.Embed(
            title="üí≥ ‡πÅ‡∏à‡πâ‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            description=
            f"üôè {interaction.user.mention} ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n"
            "‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô' ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
            color=discord.Color.green())
        await channel.send(embed=payment_instruction)
        await channel.send(embed=discord.Embed(
            description="‚úÖ ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô...",
            color=discord.Color.blue()
        ))
    @discord.ui.button(label="‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style=discord.ButtonStyle.red)
    async def cancel(self, interaction: discord.Interaction,
                     button: discord.ui.Button):
        await interaction.response.send_message("‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß",
                                                ephemeral=True)


class SeasonPriceDropdown(Select):

    def __init__(self):
        options = [
            discord.SelectOption(label="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 150 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(season_keys['1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üí∞"),
            discord.SelectOption(label="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 300 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(season_keys['3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üí∞"),
            discord.SelectOption(label="‡∏ñ‡∏≤‡∏ß‡∏£",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 400 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(season_keys['‡∏ñ‡∏≤‡∏ß‡∏£'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üî•"),
        ]
        super().__init__(placeholder="üíµ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£...",
                         options=options,
                         custom_id="select_season_price")

    async def callback(self, interaction: discord.Interaction):
        if is_blacklisted(interaction.user):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", ephemeral=True)
            return
 
        selection = self.values[0]
        if selection == "1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô":
            price = 150
            duration = "1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô"
        elif selection == "3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô":
            price = 300
            duration = "3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô"
        else:
            price = 400
            duration = "‡∏ñ‡∏≤‡∏ß‡∏£"

        embed = discord.Embed(
            title="üõí ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            description=f"üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {price} ‡∏ö‡∏≤‡∏ó\n‚è±Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {duration}",
            color=discord.Color.blue())
        view = ConfirmView(price, duration)
        await interaction.response.send_message(embed=embed,
                                                view=view,
                                                ephemeral=True)


class DailyPriceDropdown(Select):

    def __init__(self):
        options = [
            discord.SelectOption(label="3 ‡∏ß‡∏±‡∏ô",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 99 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(daily_keys['3 ‡∏ß‡∏±‡∏ô'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üí∞"),
            discord.SelectOption(label="15 ‡∏ß‡∏±‡∏ô",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 190 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(daily_keys['15 ‡∏ß‡∏±‡∏ô'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üí∞"),
            discord.SelectOption(label="30 ‡∏ß‡∏±‡∏ô",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 300 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(daily_keys['30 ‡∏ß‡∏±‡∏ô'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üí∞"),
            discord.SelectOption(label="‡∏ñ‡∏≤‡∏ß‡∏£",
                                 description=f"‡∏£‡∏≤‡∏Ñ‡∏≤ 799 ‡∏ö‡∏≤‡∏ó | ‡πÄ‡∏´‡∏•‡∏∑‡∏≠ {len(daily_keys['‡∏ñ‡∏≤‡∏ß‡∏£'])} ‡∏Ñ‡∏µ‡∏¢‡πå",
                                 emoji="üî•"),
        ]
        super().__init__(placeholder="üíµ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£...",
                         options=options,
                         custom_id="select_daily_price")

    async def callback(self, interaction: discord.Interaction):
        if is_blacklisted(interaction.user):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", ephemeral=True)
            return
            
        selection = self.values[0]
        if selection == "3 ‡∏ß‡∏±‡∏ô":
            price = 99
            duration = "3 ‡∏ß‡∏±‡∏ô"
        elif selection == "15 ‡∏ß‡∏±‡∏ô":
            price = 190
            duration = "15 ‡∏ß‡∏±‡∏ô"
        elif selection == "30 ‡∏ß‡∏±‡∏ô":
            price = 300
            duration = "30 ‡∏ß‡∏±‡∏ô"
        else:
            price = 799
            duration = "‡∏ñ‡∏≤‡∏ß‡∏£"

        embed = discord.Embed(
            title="üõí ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠",
            description=f"üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {price} ‡∏ö‡∏≤‡∏ó\n‚è±Ô∏è ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {duration}",
            color=discord.Color.blue())
        view = ConfirmView(price, duration)
        await interaction.response.send_message(embed=embed,
                                                view=view,
                                                ephemeral=True)


class AdminContactButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üë®‚Äçüíº ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô", style=discord.ButtonStyle.primary)

    async def callback(self, interaction: discord.Interaction):
        overwrites = {
            interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
            interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            interaction.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }

        admin_role = discord.utils.get(interaction.guild.roles, name="Admin")
        if admin_role:
            overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

        channel_name = f"support-{interaction.user.name}"
        channel = await interaction.guild.create_text_channel(
            channel_name,
            overwrites=overwrites
        )

        embed = discord.Embed(
            title="üé´ ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
            description=f"üëã ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {interaction.user.mention}!\n\n‚úçÔ∏è ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö\n‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏£‡∏µ‡∏ö‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
            color=discord.Color.blue()
        )

        view = PersistentView()
        active_views[channel.id] = view
        await channel.send(embed=embed, view=view)
        await interaction.response.send_message(f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà {channel.mention}", ephemeral=True)

class GetGameButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üéÆ ‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°", style=discord.ButtonStyle.success)

    async def callback(self, interaction: discord.Interaction):
        # Define the required role IDs
        required_role_ids = [1364253774977175652, 1337637128410103882]  # Replace with actual role IDs

        # Check if the user has at least one of the required roles
        user_roles = [role.id for role in interaction.user.roles]
        has_required_role = any(role_id in user_roles for role_id in required_role_ids)

        if has_required_role:
            # Send the game link if the user has the correct role
            game_link = "DNS‡∏Å‡∏±‡∏ô‡∏î‡∏≥(‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÇ‡∏´‡∏•‡∏î)\n\n https://khoindvn.io.vn/document/DNS/khoindns.mobileconfig?sign=1\n\n https://authtool.app/app-store/o3hLgE4opT\n\n ‡∏Ñ‡∏µ‡∏¢‡πå\nDoDEE"  # Replace this with the actual game link
            await interaction.response.send_message(
                f"‚úÖ {interaction.user.mention}, ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà:\n{game_link}",
                ephemeral=True
            )
        else:
            # Send a failure message if the user does not have the correct role
            await interaction.response.send_message(
                "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
                ephemeral=True
            )

class SeasonView(View):
    def __init__(self):
        super().__init__()
        self.add_item(SeasonPriceDropdown())
        self.add_item(AdminContactButton())

class DailyView(View):
    def __init__(self):
        super().__init__()
        self.add_item(DailyPriceDropdown())
        self.add_item(AdminContactButton())

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏• giveaway ‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà
async def check_pending_giveaway():
    try:
        data = load_giveaway_data()
        if not data:
            return

        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ giveaway ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏ö‡πÅ‡∏•‡∏∞‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if not data.get("ended", True):
            thai_tz = pytz.timezone('Asia/Bangkok')
            now = datetime.now(thai_tz)
            end_time = datetime.fromisoformat(data["end_time"])

            if now >= end_time.astimezone(thai_tz):
                channel = bot.get_channel(data["channel_id"])
                if channel:
                    participants = data.get("participants", [])
                    if participants:
                        # ‡∏™‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞
                        num_winners = min(data["winners"], len(participants))
                        winners = random.sample(participants, num_winners)

                        # ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏•
                        winner_mentions = [f"<@{winner_id}>" for winner_id in winners]
                        winners_text = ", ".join(winner_mentions)

                        embed = discord.Embed(
                            title="üéâ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞ GIVEAWAY! üéâ",
                            description=(
                                f"# üéÅ ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: {data['prize']}\n"
                                f"# üëë ‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞: {winners_text}\n\n"
                                "üéä ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! üéä"
                            ),
                            color=discord.Color.green()
                        )

                        await channel.send(embed=embed)

                        # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß
                        data["ended"] = True
                        save_giveaway_data(data)

                        # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°
                        try:
                            message = await channel.fetch_message(data["message_id"])
                            original_embed = message.embeds[0]
                            original_embed.description += "\n\n# üèÜ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß!"
                            original_embed.color = discord.Color.red()
                            await message.edit(embed=original_embed)
                        except:
                            pass

    except Exception as e:
        print(f"Error checking pending giveaway: {e}")

@bot.event
async def on_ready():
    print(f"‚úÖ ‡∏ö‡∏≠‡∏ó {bot.user} ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
    # ‡πÄ‡∏û‡∏¥‡πà‡∏° persistent views
    bot.add_view(PersistentCloseView())

    # ‡πÄ‡∏ä‡πá‡∏Ñ giveaway ‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà
    await check_pending_giveaway()

    # ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• giveaway
    giveaway_data = load_giveaway_data()

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° view
    bot.add_view(GiveawayView(giveaway_data))

    # ‡πÄ‡∏£‡∏¥‡πà‡∏° tasks
    check_giveaway.start()
    clear_and_post.start()
    reset_daily_sales.start()

    try:
        synced = await bot.tree.sync()
        print(f"‚úÖ Sync {len(synced)} command(s)")
        # Start FreeFire message loop
        post_freefire_message.start()
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: {e}")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
async def clear_channels():
    channels = [
        bot.get_channel(DAILY_CHANNEL_ID),
        bot.get_channel(SEASON_CHANNEL_ID),
        bot.get_channel(STATUS_CHANNEL_ID),
    ]

    for channel in channels:
        if channel:
            try:
                await channel.purge()
                print(f"‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô {channel.name} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            except Exception as e:
                print(f"‚ùå ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô {channel.name} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà
async def post_messages():
    status_channel = bot.get_channel(STATUS_CHANNEL_ID)
    if status_channel:
        try:
            response = requests.get('http://0.0.0.0:5000/')
            status = "üü¢ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥" if response.status_code == 200 else "üî¥ ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
            await bot.change_presence(status=discord.Status.online if response.status_code == 200 else discord.Status.dnd, activity=discord.Game(name=status))
            if response.status_code != 200:
                await status_channel.send("‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö")
        except Exception as e:
            await status_channel.send(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {str(e)}")

        status_message = ("```ini\n"
                          "[ üéÆ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡∏° üéÆ ]\n"
                          "```\n"
                          "**üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£**\n"
                          "```yaml\n"
                          "üü¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô   | ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥\n"
                          "üü° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç    | ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á\n"
                          "üî¥ ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô | ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á\n"
                          "```\n"
                          "**üì± ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏Å‡∏°**\n"
                          "```css\n"
                          "‚Ä¢ ROV iOS ‡∏£‡∏≤‡∏¢‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô (08/05/68)   üü°\n"
                          "‚Ä¢ ROV iOS ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (07/05/68)    üü¢\n"
                          "‚Ä¢ ROV Android                 üü¢\n"
                          "‚Ä¢ Free Fire                   üü¢\n"
                          "‚Ä¢ 8 Ball Pool (‡πÄ‡∏à‡∏•)            üü¢\n"
                          "```")
        await status_channel.send(status_message)

    daily_channel = bot.get_channel(DAILY_CHANNEL_ID)
    if daily_channel:
        embed1 = discord.Embed(
            title="‚öîÔ∏è ROV iOS PREMIUM SERVICES ‚öîÔ∏è",
            description=(
                "# üåü Premium Features\n"
                "> üí¶ ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏õ‡∏£‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©\n"
                "> üõ°Ô∏è ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 100%\n"
                "> üì≤ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏á‡πà‡∏≤‡∏¢ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏∞‡∏î‡∏ß‡∏Å\n"
                "> ‚ö° ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠\n"
                "> üî∞ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏î‡∏π‡πÅ‡∏• 24/7\n\n"
                "# üíé ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô\n"
                "```md\n"
                "# 3 ‡∏ß‡∏±‡∏ô\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 99 ‡∏ö‡∏≤‡∏ó\n\n"
                "# 15 ‡∏ß‡∏±‡∏ô\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 190 ‡∏ö‡∏≤‡∏ó\n\n"
                "# 30 ‡∏ß‡∏±‡∏ô\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 300 ‡∏ö‡∏≤‡∏ó\n\n"
                "# ‡πÅ‡∏ö‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 799 ‡∏ö‡∏≤‡∏ó\n"
                "```"
            ),
            color=0x2ecc71
        )
        embed1.set_thumbnail(url="https://media.discordapp.net/attachments/1366823031309078558/1366823437066178703/IMG_0267.png?ex=68145345&is=681301c5&hm=116e894668c93ee880d0b513da19b49d48d5557e4c62e86facbaaecc038c6ca1&=&format=webp&quality=lossless&width=989&height=989")
        embed1.set_footer(text="‚ú® ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", icon_url="https://media.discordapp.net/attachments/1366823031309078558/1366823437066178703/IMG_0267.png?ex=68145345&is=681301c5&hm=116e894668c93ee880d0b513da19b49d48d5557e4c62e86facbaaecc038c6ca1&=&format=webp&quality=lossless&width=989&height=989")
        await daily_channel.send(embed=embed1, view=DailyView())

    season_channel = bot.get_channel(SEASON_CHANNEL_ID)
    if season_channel:
        embed2 = discord.Embed(
            title="‚öîÔ∏è ROV iOS PREMIUM SERVICES ‚öîÔ∏è",
            description=(
                "# üåü Premium Features\n"
                "> üõ°Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô\n"
                "> üì≤ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏á‡πà‡∏≤‡∏¢ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏∞‡∏î‡∏ß‡∏Å\n"
                "> ‚ö° ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠\n"
                "> üî∞ ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏î‡∏π‡πÅ‡∏• 24/7\n\n"
                "# üíé ‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏£‡∏≤‡∏¢‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô\n"
                "```md\n"
                "# 1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 150 ‡∏ö‡∏≤‡∏ó\n\n"
                "# 3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 300 ‡∏ö‡∏≤‡∏ó\n\n"
                "# ‡πÅ‡∏ö‡∏ö‡∏ñ‡∏≤‡∏ß‡∏£\n"
                "* ‡∏£‡∏≤‡∏Ñ‡∏≤ 400 ‡∏ö‡∏≤‡∏ó\n"
                "```"
            ),
            color=0x2ecc71
        )
        embed2.set_thumbnail(url="https://media.discordapp.net/attachments/1302103738164449413/1366824081101553806/att.dB0srZ2U4rRKqjuiovORCx47MUCLGNJW1Bx81KiLbBU.jpg?ex=681453df&is=6813025f&hm=dd30a9b27ccfda00e3a1295c33551fe2ab84f94b27d9a7f9aba69227fc5934ee&=&format=webp&width=989&height=989")
        embed2.set_footer(text="‚ú® ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠", icon_url="https://media.discordapp.net/attachments/1302103738164449413/1366824081101553806/att.dB0srZ2U4rRKqjuiovORCx47MUCLGNJW1Bx81KiLbBU.jpg?ex=681453df&is=6813025f&hm=dd30a9b27ccfda00e3a1295c33551fe2ab84f94b27d9a7f9aba69227fc5934ee&=&format=webp&width=989&height=989")
        await season_channel.send(embed=embed2, view=SeasonView())

# Task ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å 3 ‡∏ô‡∏≤‡∏ó‡∏µ
@tasks.loop(minutes=5)
async def clear_and_post():
    await clear_channels()
    await post_messages()


async def notify_new_key(type: str, duration: str, key: str):
    notification_channel = bot.get_channel(1357308234137866370)
    if notification_channel:
        embed = discord.Embed(
            title="üîë ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà!",
            description=f"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: {type}\n‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: {duration}\n‡∏Ñ‡∏µ‡∏¢‡πå‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {len(daily_keys[duration] if type == 'day' else season_keys[duration])} ‡∏Ñ‡∏µ‡∏¢‡πå",
            color=discord.Color.green()
        )
        await notification_channel.send(embed=embed)
# ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
GIVEAWAY_DATA_FILE = "giveaway_data.json"

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
def save_giveaway_data(data):
    with open(GIVEAWAY_DATA_FILE, "w") as f:
        json.dump(data, f, indent=4)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
def load_giveaway_data():
    if os.path.exists(GIVEAWAY_DATA_FILE):
        try:
            with open(GIVEAWAY_DATA_FILE, "r") as f:
                return json.load(f)
        except json.JSONDecodeError:
            print("‚ö†Ô∏è Invalid JSON in giveaway_data.json. Resetting to empty.")
            return {}
    return {}
# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å: ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô/‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÑ‡∏ü‡∏•‡πå giveaway_data.json
GIVEAWAY_DATA_FILE = "giveaway_data.json"

def save_giveaway_data(data):
    with open(GIVEAWAY_DATA_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, indent=4, ensure_ascii=False)

def load_giveaway_data():
    try:
        with open(GIVEAWAY_DATA_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {"active": False}

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á: ‡∏Ñ‡∏•‡∏≤‡∏™ GiveawayButton ‡πÅ‡∏•‡∏∞ GiveawayView
class GiveawayButton(discord.ui.Button):
    def __init__(self, giveaway_data: dict):
        super().__init__(
            label="üéâ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°",
            style=discord.ButtonStyle.success,
            custom_id="join_giveaway"
        )
        self.giveaway_data = giveaway_data

    async def callback(self, interaction: discord.Interaction):
        if self.giveaway_data.get("ended", False):
            embed = discord.Embed(
                description="‚ùå ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏à‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return

        if interaction.user.id in self.giveaway_data.get("participants", []):
            embed = discord.Embed(
                description="‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!",
                color=discord.Color.red()
            )
            await interaction.response.send_message(embed=embed, ephemeral=True)
            return

        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
        if "participants" not in self.giveaway_data:
            self.giveaway_data["participants"] = []
        self.giveaway_data["participants"].append(interaction.user.id)
        save_giveaway_data(self.giveaway_data)

        # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó embed
        try:
            message = await interaction.channel.fetch_message(self.giveaway_data["message_id"])
            embed = message.embeds[0]
            participant_count = len(self.giveaway_data["participants"])
            win_chance = (self.giveaway_data["winners"] / participant_count * 100) if participant_count > 0 else 0

            # ‡πÅ‡∏¢‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            parts = embed.description.split("\n")
            for i, line in enumerate(parts):
                if "üë• ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°:" in line:
                    parts[i] = f"> üë• ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°: {participant_count} ‡∏Ñ‡∏ô"
                elif "üéØ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞:" in line:
                    parts[i] = f"> üéØ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞: {win_chance:.1f}%"

            embed.description = "\n".join(parts)
            await message.edit(embed=embed)

            success_embed = discord.Embed(
                description=f"‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n> üéØ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞: {win_chance:.1f}%",
                color=discord.Color.green()
            )
            await interaction.response.send_message(embed=success_embed, ephemeral=True)

        except Exception as e:
            print(f"Error updating giveaway message: {e}")
            await interaction.response.send_message("‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

class GiveawayView(discord.ui.View):
    def __init__(self, giveaway_data: dict):
        super().__init__(timeout=None)
        self.add_item(GiveawayButton(giveaway_data))

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°: ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /giveaway
@bot.tree.command(name="giveaway", description="‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• (Admin only)")
@app_commands.describe(
    prize="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•",
    duration="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏ô‡∏≤‡∏ó‡∏µ)",
    winners="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞ (default: 1)"
)
async def giveaway(interaction: discord.Interaction, prize: str, duration: int, winners: int = 1):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    thai_tz = pytz.timezone('Asia/Bangkok')
    start_time = datetime.now(thai_tz)
    end_time = start_time + timedelta(minutes=duration)

    giveaway_data = {
        "prize": prize,
        "end_time": end_time.isoformat(),
        "winners": winners,
        "participants": [],
        "ended": False,
        "channel_id": interaction.channel_id,
        "message_id": None
    }

    embed = discord.Embed(
        title="```üéâ GIVEAWAY TIME! üéâ```",
        description=(
            f"# üéÅ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: __{prize}__\n\n"
            "# ‚è∞ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£\n"
            f"> üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {end_time.strftime('%d/%m/%Y')}\n"
            f"> ‚åö ‡πÄ‡∏£‡∏¥‡πà‡∏°: {start_time.strftime('%H:%M:%S')} ‡∏ô.\n"
            f"> üîî ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: {end_time.strftime('%H:%M:%S')} ‡∏ô.\n\n"
            "# üìä ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\n"
            f"> üë• ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°: 0 ‡∏Ñ‡∏ô\n"
            f"> üëë ‡∏ú‡∏π‡πâ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ: {winners} ‡∏Ñ‡∏ô\n"
            f"> üéØ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞: 100%\n\n"
            "```ini\n"
            "[‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üéâ ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏•‡∏∏‡πâ‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•!]\n"
            "```"
        ),
        color=0xFF1493
    )

    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1301468241335681024/1368181218180333568/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg?ex=6817f24d&is=6816a0cd&hm=47f310cf31e7d0b0e307d3e1378c6e90988a567765f83c1051a2329bbf132d58&=&format=webp&width=989&height=989")
    embed.set_footer(text=f"‡∏à‡∏±‡∏î‡πÇ‡∏î‡∏¢: {interaction.user.name} ‚Ä¢ Premium", icon_url=interaction.user.avatar.url)

    view = GiveawayView(giveaway_data)
    message = await interaction.channel.send(
        "||@everyone|| üåü **‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß!**",
        embed=embed,
        view=view
    )

    giveaway_data["message_id"] = message.id
    save_giveaway_data(giveaway_data)

    await interaction.response.send_message("‚ú® ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏à‡∏Å‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

# ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏µ‡πà: Task ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Giveaway
@tasks.loop(seconds=10)
async def check_giveaway():
    try:
        data = load_giveaway_data()
        if not data or data.get("ended", True):
            return

        thai_tz = pytz.timezone('Asia/Bangkok')
        now = datetime.now(thai_tz)
        end_time = datetime.fromisoformat(data["end_time"])

        if now >= end_time.astimezone(thai_tz):
            channel = bot.get_channel(data["channel_id"])
            if not channel:
                return

            participants = data.get("participants", [])
            if not participants:
                await channel.send("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
                data["ended"] = True
                save_giveaway_data(data)
                return

            # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞
            num_winners = min(data["winners"], len(participants))
            winners = random.sample(participants, num_winners)
            winner_mentions = [f"<@{winner_id}>" for winner_id in winners]
            winners_text = ", ".join(winner_mentions)

            winner_embed = discord.Embed(
                title="üéâ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞ GIVEAWAY! üéâ",
                description=(
                    f"# üéÅ ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: {data['prize']}\n"
                    f"# üëë ‡∏ú‡∏π‡πâ‡∏ä‡∏ô‡∏∞: {winners_text}\n\n"
                    "üéä ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! üéä"
                ),
                color=discord.Color.green()
            )

            await channel.send(embed=winner_embed)

            # ‡∏°‡∏≤‡∏£‡πå‡∏Ñ‡∏ß‡πà‡∏≤‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß
            data["ended"] = True
            save_giveaway_data(data)

            # ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏î‡∏¥‡∏°
            try:
                message = await channel.fetch_message(data["message_id"])
                original_embed = message.embeds[0]
                original_embed.description += "\n\n# üèÜ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß!"
                original_embed.color = discord.Color.red()
                await message.edit(embed=original_embed)
            except:
                pass

    except Exception as e:
        print(f"Error in check_giveaway: {e}")

@bot.tree.command(name="add", description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡πÉ‡∏´‡∏°‡πà (Admin only)")
@app_commands.choices(type=[
    app_commands.Choice(name="Day", value="day"),
    app_commands.Choice(name="Season", value="season")
])
@app_commands.choices(duration=[
    app_commands.Choice(name="3 ‡∏ß‡∏±‡∏ô", value="3 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="15 ‡∏ß‡∏±‡∏ô", value="15 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="30 ‡∏ß‡∏±‡∏ô", value="30 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="‡∏ñ‡∏≤‡∏ß‡∏£", value="‡∏ñ‡∏≤‡∏ß‡∏£"),
    app_commands.Choice(name="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô"),
    app_commands.Choice(name="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô")
])
async def add_key(interaction: discord.Interaction, type: str, duration: str, key: str):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    if type == "day" and duration in daily_keys:
        daily_keys[duration].append(key)
        save_daily_keys()
        await notify_new_key("day", duration, key)
        await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    elif type == "season" and duration in season_keys:
        season_keys[duration].append(key)
        save_keys()
        await notify_new_key("season", duration, key)
        await interaction.response.send_message(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)

@bot.tree.command(name="remove", description="‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå (Admin only)")
@app_commands.choices(type=[
    app_commands.Choice(name="Day", value="day"),
    app_commands.Choice(name="Season", value="season")
])
@app_commands.choices(duration=[
    app_commands.Choice(name="3 ‡∏ß‡∏±‡∏ô", value="3 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="15 ‡∏ß‡∏±‡∏ô", value="15 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="30 ‡∏ß‡∏±‡∏ô", value="30 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="‡∏ñ‡∏≤‡∏ß‡∏£", value="‡∏ñ‡∏≤‡∏ß‡∏£"),
    app_commands.Choice(name="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô"),
    app_commands.Choice(name="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô")
])
async def remove_key(interaction: discord.Interaction, type: str, duration: str, key: str):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    if type == "day" and duration in daily_keys:
        if key in daily_keys[duration]:
            daily_keys[duration].remove(key)
            save_daily_keys()
            await interaction.response.send_message(f"‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)
    elif type == "season" and duration in season_keys:
        if key in season_keys[duration]:
            season_keys[duration].remove(key)
            save_keys()
            await interaction.response.send_message(f"‚úÖ ‡∏•‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå {key} ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)

@bot.tree.command(name="list", description="‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Admin only)")
@app_commands.choices(type=[
    app_commands.Choice(name="Day", value="day"),
    app_commands.Choice(name="Season", value="season")
])
@app_commands.choices(duration=[
    app_commands.Choice(name="3 ‡∏ß‡∏±‡∏ô", value="3 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="15 ‡∏ß‡∏±‡∏ô", value="15 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="30 ‡∏ß‡∏±‡∏ô", value="30 ‡∏ß‡∏±‡∏ô"),
    app_commands.Choice(name="‡∏ñ‡∏≤‡∏ß‡∏£", value="‡∏ñ‡∏≤‡∏ß‡∏£"),
    app_commands.Choice(name="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="1 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô"),
    app_commands.Choice(name="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô", value="3 ‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô")
])
async def list_keys(interaction: discord.Interaction, type: str, duration: str):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    if type == "day" and duration in daily_keys:
        keys = daily_keys[duration]
        await interaction.response.send_message(f"üîë ‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration}:\n```\n" + "\n".join(keys) + "\n```", ephemeral=True)
    elif type == "season" and duration in season_keys:
        keys = season_keys[duration]
        await interaction.response.send_message(f"üîë ‡∏Ñ‡∏µ‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {duration}:\n```\n" + "\n".join(keys) + "\n```", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏", ephemeral=True)

@bot.command(name="announce")
@commands.has_role("Admin")
async def text_announce(ctx, *, message):
    """‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (Admin only)"""
    await ctx.message.delete()
    embed = discord.Embed(
        title="üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®",
        description=message,
        color=discord.Color.blue()
    )
    embed.set_footer(text=f"‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÇ‡∏î‡∏¢ {ctx.author.name}")
    await ctx.send(embed=embed)

@bot.tree.command(name="announce", description="‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (Admin only)")
async def slash_announce(interaction: discord.Interaction, message: str):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    embed = discord.Embed(
        title="üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®",
        description=message,
        color=discord.Color.blue()
    )
    embed.set_footer(text=f"‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÇ‡∏î‡∏¢ {interaction.user.name}")
    await interaction.response.send_message(embed=embed)

@bot.tree.command(name="shop", description="‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô")
async def shop_status(interaction: discord.Interaction):
    embed = discord.Embed(
        title="üè™ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô",
        description="‡∏£‡πâ‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡πÇ‡∏õ‡∏£ ROV iOS ",
        color=discord.Color.gold()
    )

    embed.add_field(
        name="üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡πâ‡∏≤‡∏ô",
        value=f"üë• ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {len(interaction.guild.members)}\n"
              f"üí∞ ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: {daily_sales} ‡∏ö‡∏≤‡∏ó\n"
              f"‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß: 4.9/5.0",
        inline=False
    )

    embed.add_field(
        name="‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£",
        value="‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô 24 ‡∏ä‡∏°.",
        inline=True
    )

    embed.set_thumbnail(url="https://media.discordapp.net/attachments/1366123564771835994/1367160525493899345/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg?ex=68143bb5&is=6812ea35&hm=7993be233d805b54f1b6cc3535b6a41fee01e69457ac43178dd33fbf180f05ef&=&format=webp&width=989&height=989")
    embed.set_footer(text="‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î")

    await interaction.response.send_message(embed=embed)

@bot.command(name="review")
async def review(ctx, rating: str, *, comment: str = None):
    """‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (!review <1-5 ‡∏î‡∏≤‡∏ß> [‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô])"""
    # Delete the command message
    await ctx.message.delete()
    
    # Convert rating to int and validate
    try:
        stars = int(rating)
        if stars < 1 or stars > 5:
            await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô 1-5 ‡∏î‡∏≤‡∏ß", delete_after=5)
            return
    except ValueError:
        await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 1-5", delete_after=5)
        return

    # Create review embed
    stars_emoji = "‚≠ê" * stars
    embed = discord.Embed(
        title="```üìù ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏à‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤```",
        description=(
            f"# ‚≠ê ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô\n"
            f"> {stars_emoji}\n\n"
            f"# üí≠ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô\n"
            f"> {comment if comment else '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°'}"
        ),
        color=discord.Color.gold()
    )
    
    # Add author info
    embed.set_author(
        name=ctx.author.name,
        icon_url=ctx.author.avatar.url if ctx.author.avatar else None
    )
    
    # Add timestamp
    embed.timestamp = ctx.message.created_at
    
    # Send to review channel
    review_channel = bot.get_channel(1337638812293267546)
    if review_channel:
        await review_channel.send(embed=embed)
        # Send confirmation
        confirm = await ctx.send("‚úÖ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß!")
        await confirm.delete(delay=5)
    else:
        await ctx.send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß", delete_after=5)
@bot.tree.command(name="sync", description="Sync slash commands (Admin only)")
async def sync(interaction: discord.Interaction):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    try:
        print("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á Sync commands...")
        synced = await bot.tree.sync()
        print(f"‚úÖ Sync ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ({len(synced)} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)")
        await interaction.response.send_message(
            f"‚úÖ Sync commands ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ({len(synced)} ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)",
            ephemeral=True
        )
    except Exception as e:
        print(f"‚ùå Sync ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
        await interaction.response.send_message(
            f"‚ùå Sync ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}",
            ephemeral=True
        )


@bot.event
async def on_message(message):
    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏õ‡πá‡∏ô "." ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if message.channel.id == 1367747079253786715 and message.content == ".":
        try:
            embed = discord.Embed(
                title="üéÆ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Å‡∏° ROV iOS",
                description=(
                    "# üì± ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó\n"
                    "> üÜï ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 08/05/2568\n"
                    "> üõ°Ô∏è Anti-Ban System\n"
                    "> ‚ö° ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô\n"
                    "> üí´ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢\n\n"
                    "# üîë ‡∏Ñ‡∏µ‡∏¢‡πå\n"
                    "```ansi\nRoVViP```\n\n"
                    "# ‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á\n"
                    "> 1Ô∏è‚É£ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á DNS ‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Å‡∏°\n"
                    "> 2Ô∏è‚É£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£\n" 
                    "> 3Ô∏è‚É£ ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á\n"
                    "> 4Ô∏è‚É£ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!\n\n"
                    "# üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\n"
                    "> ‚úì ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö iOS 10 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ\n"
                    "> ‚úì ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ü‡∏£‡∏µ‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n"
                    "> ‚úì ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 100%\n"
                    "> ‚úì ‡∏ã‡∏±‡∏û‡∏û‡∏≠‡∏£‡πå‡∏ï 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
                ),
                color=0x2ecc71
            )

            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/1301468241335681024/1369899375186411580/IMG_0031.jpg?ex=681d89b6&is=681c3836&hm=6b93125d04319cf97cdb658d6b3966f77ac32e8a30f00dc14e84614145621d80&")
            embed.set_footer(text="‚ú® Premium Version ‚Ä¢ Updated Today", icon_url="https://media.discordapp.net/attachments/1301468241335681024/1368181218180333568/att.-tSGKz9H0h_YYa1oXLy-3Y08qniWWH4WoIuvlicUENA.jpg?ex=681d384d&is=681be6cd&hm=522dde79023b76803c4ad4bd0c8146b1c7d03f0d221286a149e8e7eef7fb6618&=&format=webp&width=989&height=989")

            class DownloadView(discord.ui.View):
                def __init__(self):
                    super().__init__()

                    buttons = [
                        ("üì± ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î #1", "https://authtool.app/app-store/z9F5rVYXmS", discord.ButtonStyle.success),
                        ("üì± ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î #2", "https://kravasigner.com/install?uuid=b964d167-24e1-471c-824b-28c434b15d0f", discord.ButtonStyle.success),
                        ("üì± ESign / GBox", "https://drive.google.com/file/d/1R47oxP7GMvWCPVB1raNWK9fUcfqDJCHN/view?usp=drivesdk", discord.ButtonStyle.success),
                        ("üõ°Ô∏è ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á DNS", "https://khoindvn.io.vn/document/DNS/khoindns.mobileconfig?sign=1", discord.ButtonStyle.primary),
                        ("üåü ‡πÑ‡∏ü‡∏•‡πå Extra", "https://drive.google.com/file/d/1hBVggnrFQJ4gWyVxKhr0ZI8xy2Xn-4xK/view", discord.ButtonStyle.secondary),
                        ("üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£", "https://youtube.com/shorts/MX7HYSY_Ss0?si=whW6GvR3mfaw4ymh", discord.ButtonStyle.danger)
                    ]

                    for label, url, style in buttons:
                        self.add_item(discord.ui.Button(label=label, url=url, style=style))

                    @discord.ui.button(label="üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á", style=discord.ButtonStyle.danger, custom_id="guide")
                    async def guide(self, interaction: discord.Interaction, button: discord.ui.Button):
                        guide_embed = discord.Embed(
                            title="üìù ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á",
                            description=(
                                "# üî∞ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: DNS\n"
                                "> 1Ô∏è‚É£ ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå DNS\n"
                                "> 2Ô∏è‚É£ ‡∏Å‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Profile\n"
                                "> 3Ô∏è‚É£ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ > ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ > VPN & DNS\n"
                                "> 4Ô∏è‚É£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô DNS\n\n"
                                "# üéÆ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡∏°\n"
                                "> 1Ô∏è‚É£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î\n"
                                "> 2Ô∏è‚É£ ‡∏Å‡∏î Install/‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á\n"
                                "> 3Ô∏è‚É£ ‡∏£‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏à‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à\n\n"
                                "# ‚ö° ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô\n"
                                "> 1Ô∏è‚É£ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á\n"
                                "> 2Ô∏è‚É£ ‡πÉ‡∏™‡πà‡∏Ñ‡∏µ‡∏¢‡πå: `RoVViP`\n"
                                "> 3Ô∏è‚É£ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!"
                            ),
                            color=discord.Color.blue()
                        )
                        guide_embed.set_footer(text="‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")
                        await interaction.response.send_message(embed=guide_embed, ephemeral=True)

            await message.reply(embed=embed, view=DownloadView())

        except discord.HTTPException as e:
            print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: {e}")

    await bot.process_commands(message)

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ
class PersistentSaleView(discord.ui.View):
    def __init__(self, seller, price):
        super().__init__(timeout=None) # ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà timeout=None
        self.seller = seller
        self.price = price

    @discord.ui.button(label="üí¨ ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°/‡∏ã‡∏∑‡πâ‡∏≠", style=discord.ButtonStyle.primary, custom_id="contact_seller")
    async def contact_seller(self, interaction: discord.Interaction, button: discord.ui.Button):
        # Check if user is blacklisted
        if is_blacklisted(interaction.user):
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", ephemeral=True)
            return

        if interaction.user.id == self.seller.id:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ", ephemeral=True)
            return

        overwrites = {
            interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
            interaction.user: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            self.seller: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            interaction.guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }

        admin_role = discord.utils.get(interaction.guild.roles, name="Admin")
        if admin_role:
            overwrites[admin_role] = discord.PermissionOverwrite(read_messages=True, send_messages=True)

        channel_name = f"sale-{interaction.user.name}-{self.seller.name}"
        try:
            channel = await interaction.guild.create_text_channel(
                channel_name,
                overwrites=overwrites,
                topic=f"‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢: {self.price} ‡∏ö‡∏≤‡∏ó"
            )

            chat_embed = discord.Embed(
                title="üí¨ ‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢",
                description=(
                    f"‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠: {interaction.user.mention}\n"
                    f"‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢: {self.seller.mention}\n"
                    f"‡∏£‡∏≤‡∏Ñ‡∏≤: {self.price} ‡∏ö‡∏≤‡∏ó\n\n"
                    "```\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö```"
                ),
                color=discord.Color.blue()
            )

            await channel.send(embed=chat_embed, view=PersistentCloseView())
            await interaction.response.send_message(
                f"‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà {channel.mention}",
                ephemeral=True
            )

        except Exception as e:
            await interaction.response.send_message(
                f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó‡πÑ‡∏î‡πâ: {str(e)}",
                ephemeral=True
            )

class PersistentCloseView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üîí ‡∏õ‡∏¥‡∏î‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ä‡∏ó", style=discord.ButtonStyle.danger, custom_id="close_channel")
    async def close_channel(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.channel.delete()

# ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á sale
@bot.command(name="sale")
async def sale_post(ctx, price: str = None):
    # Check if user is blacklisted
    if is_blacklisted(ctx.author):
        await ctx.send("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô", delete_after=5)
        await ctx.message.delete()
        return
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏≠‡∏á
    if ctx.channel.id != 1301503694067470367:
        await ctx.message.delete()
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤
    if not price:
        await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏Ñ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô !sale 150", delete_after=5)
        await ctx.message.delete()
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    if not ctx.message.attachments:
        await ctx.send("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", delete_after=5)
        await ctx.message.delete()
        return

    # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    full_message = ctx.message.content
    description = " ".join(full_message.split()[2:])

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á embed
    embed = discord.Embed(
        title="üéÆ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≤‡∏¢ ID",
        description=(
            f"# üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤: {price} ‡∏ö‡∏≤‡∏ó\n\n"
            f"# üìù ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\n"
            f"{description}\n\n"
            "```\n‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°/‡∏ã‡∏∑‡πâ‡∏≠' ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢```"
        ),
        color=0xFF1493
    )

    try:
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        image_files = []
        for attachment in ctx.message.attachments:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            if attachment.content_type.startswith('image'):
                # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå
                file = await attachment.to_file()
                image_files.append(file)

                # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å
                if len(image_files) == 1:
                    embed.set_image(url=f"attachment://{file.filename}")
                else:
                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô fields
                    embed.add_field(
                        name=f"üì∏ ‡∏£‡∏π‡∏õ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° {len(image_files)}",
                        value="[‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π]({})".format(attachment.url),
                        inline=True
                    )

    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ: {e}")
        await ctx.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û", delete_after=5)
        return

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° timestamp
    embed.timestamp = ctx.message.created_at

    # ‡πÉ‡∏™‡πà footer
    embed.set_footer(
        text=f"‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢: {ctx.author.name} ‚Ä¢ ID: {ctx.author.id}",
        icon_url=ctx.author.avatar.url if ctx.author.avatar else None
    )

    # ‡πÄ‡∏û‡∏¥‡πà‡∏° thumbnail
    if ctx.author.avatar:
        embed.set_thumbnail(url=ctx.author.avatar.url)

    try:
        # ‡∏™‡πà‡∏á embed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°
        sales_channel = bot.get_channel(1301503694067470367)
        message = await sales_channel.send(
            files=image_files,
            embed=embed,
            view=PersistentSaleView(ctx.author, price)
        )

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢
        confirm_embed = discord.Embed(
            description=f"‚úÖ ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! [‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π]({message.jump_url})",
            color=discord.Color.green()
        )
        await ctx.author.send(embed=confirm_embed)

    except Exception as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ: {e}")
        await ctx.send("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", delete_after=5)

    # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
    await ctx.message.delete()

if __name__ == "__main__":
    from myserver import run_server
    import threading
    server_thread = threading.Thread(target=run_server)
    server_thread.start()
    bot.run(TOKEN)
